// #1 true & false

// if(false){
//   console.log("조건은 참입니다.") // 조건이 참인 경우에 다 들어온다.
// } else {
//   console.log("거짓입니다.") // 조건이 거짓인 경우 다 나온다.
// }

//===================================================================================

// #2 if절 사용 01 if ... else ...

// let age = 21

// if (age > 20) { // ==> 운전이 가능합니다.
//   console.log("운전이 가능합니다.")
// } else {
//   console.log("운전이 불가능합니다.")
// }
// // 우선 age를 21살로 지정을 해놓았는데
// // if true 기준이 20살 이상으로 되어있기 때문에
// // 운전이 가능하다고 출력이 되는 것이다.
// // age = 18 // ==> 운전이 불가능합니다.

//=====================================================================================

// // #3 if절 사용 02 if ... if else ... else ...

// let age = 18 // => 오토바이 운전이 가능합니다.
// // let age = 15 // => 운전이 불가능 합니다.

// if (age > 20) { // 20살 초과에만 적용
//   console.log("운전이 가능합니다.")
// } else if(age >= 18) { // 18살 이상 20살 미만에게만 적용이 되버림
//   console.log("오토바이 운전이 가능합니다.")
// }
// else { // 18살 이하에게 적용한다.
//   console.log("운전이 불가능합니다.")
// }

// // if문은 필수적이다. 
// // if else는 선택적이다. (넣어도 되고 안 넣어도 된다.)
// // else는 선택적이다. (넣어도 되고 안 넣어도 된다.)
// // else 같은 경우는 if 절에 포함 되지 않은 조건 모두 포함이 된다.

//=======================================================================================

// #4 if절 사용 03 if ... else if ... else ... 작성시 주의 사항

// let age = 21

// if (age >= 18){ 
//   console.log("오토바이 운전만 가능합니다.")
// } else if(age > 20) { //** 이런경우도 참인데?! 
//   // 이미 맨위에 조건에서 참으로서 결과가 나오면 그 밑의 결과가 어떠하든
//   // 자동 종료가 되어 버린다. (출력을 안한다 그냥)
//   console.log("운전이 가능합니다")
// } else {
//   console.log("운전이 불가능합니다.")
// }

// // 위에 경우에서와 같이 if문 세울때 주의해야 할 점은 이 if 문 조건들의 순서다. 
// // 조건들만 막 나열해서 되는게 아니라
// // 범위만 있다면 범위를 작은 것 부터 큰거 순으로 두는게 맞다.

//========================================================================================

// #5 && : and 연산자

// let age = 21

// if(18<=age && age < 20) { 
//   // if(18<=age && age < 20) 으로 설정하면 바로 밑에 조건이 참이 되버린다
//   // [18<=age && age < 20] = [18<=age < 20] = [18~20] 이라는 뜻이기 때문. [&& : and 연산자]
//   // && 같은 경우는 양쪽 둘다 true이어야 적용되는 식이다. 그래서 [18~20] 범위가 형성되는 것이다.
//   // 참고로 [|| : or 연산자] 같은 경우는 둘 중 하나면 true 여도 true 이다. 
//   console.log("오토바이 운전만 가능합니다.")
// } else if(age > 20) { 
//   console.log("운전이 가능합니다")
// } else {
//   console.log("운전이 불가능합니다.")
// }

//==========================================================================================

// #6 || : or 연산자

// let age = 21

// if(18<=age || age < 20) { // 둘 중 하나면 true 여도 true 이다. 
//   console.log("오토바이 운전만 가능합니다.")
// } else if(age > 20) { 
//   console.log("운전이 가능합니다")
// } else {
//   console.log("운전이 불가능합니다.")
// }

//==========================================================================================

// #7 조건문 안에 조건걸기

// let age = 21 // 애초에 21살 미만으로 설정하면 if절 true 부분은 완전히 스킵이 되기 때문에 
//             // 바로 else부분으로 간다. //-> 운전이 불가능합니다.
// let licence = true // -> 운전이 가능합니다.
//                   // false -> 면허를 따세요.

// if(age > 20) {
//   if(licence == true){
//     console.log("운전이 가능합니다.")
//   } else {
//     console.log("면허를 따세요")
//   }
// } else {
//   console.log("운전이 불가능합니다.")
// }

//==========================================================================================

// #8 == 와 !=

// let age = 17
// let licence = true

// if(age > 20) {
//   if(licence != true){ // i= true ==> false
//     console.log("운전이 가능합니다.")
//   } else {
//     console.log("면허를 따세요")
//   }
// } else {
//   console.log("운전이 불가능합니다.")
// }

// 우선 age로 큰 true & false를 구별하고
// 만약 첫번 째가 true 일때  그 안에 있는 if 절에서 다시 true & false를 구별한다. 

//==========================================================================================

// # 문제 1 

// 유저가 입력하는 숫자가 0인지 음성인지 양성인지 판단하는 프로그램을 만드시오

// let num = 0

// if(num > 0) {
//   console.log("양성")
// } else if(num < 0){
//   console.log("음성")
// } else {
//   console.log("0입니다.")
// }

//==========================================================================================

// # 문제 2

// 나는 대학교 교수다. 레포트 점수에따라 등급을 매기는 프로그램을 만드시오.

// let score = 89

// if (score >= 90 && score <= 100) {
//   console.log("A")
// } else if(score < 90 && score >= 80) {
//   console.log("B")
// } else if(score < 80 && score >= 70) {
//   console.log("C")
// } else if(score < 70 && score >= 60) {
//   console.log("D")
// } else if(score < 60 && score >= 0) {
//   console.log("F")
// } else {
//   console.log("점수를 다시 입력하세요")
// }

//==========================================================================================

// # 문제 3
//----------------------------문제-------------------------------
// 한 지원자가 우리회사에 지원을했다. 지원자가 사용가능한 스킬은 배열에 제공이 된다

// let skills = ["HTML","CSS","Javascript","React"]
// Javascript와 React 둘다 할줄 안다면 “합격!” Javascript와 React 둘중 하나만 할줄 안다면 “예비”, 두 스킬이 없다면 “탈락” 을 보여주는 프로그램을 짜시오.
// ----------------------------조건-------------------------------
// input : let skills = ["HTML","CSS","Javascript","React"]
// output: 합격 

// input:let skills = ["HTML","CSS","Javascript"] 
// output: 예비 

// input:let skills = ["HTML","CSS"] 
// output: 탈락
//-----------------------------------------------------------------

// let skills = ["HTML","CSS","Javascript","React"]

// if (skills.includes("Javascript") && skills.includes("React")) {
//   console.log("합격!")
// } else if (skills.includes("Javascript") || skills.includes("React")) {
//   console.log("예비")
// } else {
//   console.log("탈락")
// }

//==========================================================================================

// 그외 조건문 

// #1 switch

// 먼저 if 문 방식

// let menu = 8

// if(menu == 1){
//   console.log("물건사기")
// } else if(menu == 2){
//   console.log("잔고확인")
// } else if(menu == 3){
//   console.log("히스토리 확인")
// } else {
//   console.log("홈으로 돌아가기")
// } // -> 홈으로 돌아가기 

// 위에 if문 방식을 switch방식으로 전환

// let menu = 8

// switch (menu){
//   case 1:
//     console.log("물건사기")
//     break;  
//   case 2:
//     console.log("잔고확인")
//     break;
//   case 3:
//     console.log("히스토리 확인")
//     break;  
//   default:
//     console.log("홈으로 돌아가기")
//     break;    
// } // -> 홈으로 돌아가기 

// 이렇게 보면 if문과 switch 문이 별로 차이가 없어 보일지 모르지만
// switch 문이 사용에 좀더 제한이 있다.
// switch 문은 if문과 다르게 || 과 &&를 쓰지 못한다.

// 숫자를 포함시키게 하기 위해서는

// let menu = 8

// switch (menu){
//   case 1:
//   case 2:
//   case 3: 
//     console.log("물건살까?")
//     break;  
//  default:
//     console.log("집이나가자")
// } // -> 집이나 가자

// 이렇게 case를 하나의 식에 중복으로 씌워야 한다.
// 그러니까 일일히 case 에다가 조건에 포함되려고 하는 숫자를
// 소수점 가릴거 없이(포함된다면) 하나하나 써야 한다. 
// 이러한 불편함 때문에 switch를 잘 안쓰고 if... else... 조건문을 쓴다.
// 헷갈리면 그냥 if 문 써도 문제가 없다.


//==========================================================================================

// #2 삼항 연산식

let menu = 2

if(menu <= 3){
  console.log("범위 안에 숫자입니다")
} else {
  console.log("범위 밖의 숫자입니다")
}

// 이걸 1줄로 줄일수 있다. ==> 이걸 삼항 연산식 이라고 부른다

let answer = menu <=3? "범위 안에 숫자입니다." : "범위 밖의 숫자입니다."
// 메뉴가 3보다 같거나 작으면'?' true면 여기 자리에 : false면 여기 자리에 놓는다
// 3항 연산식 조건? true일때 : false 일때
// string 형식도 되고 숫자 형식도 가능하다.

// 3항 연산식 조건 
// 1. 조건이 많지 않고
// 2. 반환하고 싶은 딱 하나만 코드에 있을때
// 3항 연산식 안에 있는 값이 반환이 돼서 변수로 들어감

console.log(answer)

